{"version":3,"sources":["components/Carousel.tsx","api/images.ts","App.tsx","index.tsx"],"names":["Carousel","images","settings","step","frameSize","itemWidth","animationDuration","infinite","useState","offset","setOffset","useEffect","hiddenImages","length","maxItemsOnPage","containerWidth","className","type","onClick","Math","min","disabled","style","width","map","image","transform","transition","src","alt","max","imagesApi","App","setImages","setSettings","handleValueChange","e","target","value","name","onChange","checked","handleCheckChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4a9657f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\nimport { Settings } from '../types/settings';\n\ntype Props = {\n  images: string[];\n  settings: Settings;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  settings: {\n    step, frameSize, itemWidth, animationDuration, infinite,\n  },\n}) => {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => setOffset(0), [itemWidth]);\n\n  const hiddenImages = (images.length - frameSize) * itemWidth;\n\n  const showPrevImage = () => {\n    setOffset(Math.min(offset + itemWidth * step, 0));\n\n    if (offset === 0) {\n      setOffset(-hiddenImages);\n    }\n  };\n\n  const showNextImage = () => {\n    setOffset(Math.max(offset - itemWidth * step, -hiddenImages));\n\n    if (offset === -hiddenImages && infinite) {\n      setOffset(0);\n    }\n  };\n\n  const maxItemsOnPage = (images.length - frameSize) * itemWidth;\n\n  const containerWidth = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        className=\"Carousel__btn\"\n        onClick={showPrevImage}\n        disabled={offset === 0}\n      >\n        <span className=\"Carousel__direction\">left</span>\n      </button>\n\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${containerWidth}px` }}\n      >\n        {images.map(image => (\n          <li\n            className=\"Carousel__element\"\n            key={image}\n            style={{\n              transform: `translateX(${offset}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${image}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"Carousel__btn\"\n        data-cy=\"next\"\n        onClick={showNextImage}\n        disabled={offset === -maxItemsOnPage && !infinite}\n      >\n        <span className=\"Carousel__direction\">rigth</span>\n      </button>\n    </div>\n  );\n};\n","export const imagesApi = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { imagesApi } from './api/images';\nimport { Settings } from './types/settings';\n\nconst App: React.FC = () => {\n  const [images, setImages] = useState<string[]>([]);\n  const [settings, setSettings] = useState<Settings>({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  useEffect(() => {\n    setImages(imagesApi);\n  }, []);\n\n  const handleValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n\n    setSettings({\n      ...settings,\n      [name]: value,\n    });\n  };\n\n  const handleCheckChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSettings({ ...settings, infinite: e.target.checked });\n  };\n\n  return (\n    <div className=\"App\" data-cy=\"title\">\n      <h1>\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <Carousel\n        settings={settings}\n        images={images}\n      />\n\n      <div className=\"App__settings\">\n        <label className=\"App__settings-lable\">\n          Step\n          <input\n            className=\"App__settings-field\"\n            type=\"number\"\n            name=\"step\"\n            value={settings.step}\n            onChange={(e) => handleValueChange(e)}\n            min={1}\n            max={images.length - 1}\n          />\n        </label>\n\n        <label className=\"App__settings-lable\">\n          Item width\n          <input\n            className=\"App__settings-field\"\n            type=\"number\"\n            name=\"itemWidth\"\n            value={settings.itemWidth}\n            onChange={(e) => handleValueChange(e)}\n            min={50}\n            max={350}\n          />\n        </label>\n\n        <label className=\"App__settings-lable\">\n          Frame size\n          <input\n            className=\"App__settings-field\"\n            type=\"number\"\n            name=\"frameSize\"\n            value={settings.frameSize}\n            onChange={(e) => handleValueChange(e)}\n            min={1}\n            max={images.length}\n          />\n        </label>\n\n        <label className=\"App__settings-lable\">\n          Animation Duration\n          <input\n            className=\"App__settings-field\"\n            type=\"number\"\n            name=\"animationDuration\"\n            value={settings.animationDuration}\n            onChange={(e) => handleValueChange(e)}\n            min={0}\n          />\n        </label>\n\n        <label className=\"App__settings-lable\">\n          Infinite\n          <input\n            className=\"App__settings-field\"\n            type=\"checkbox\"\n            name=\"infinite\"\n            checked={settings.infinite}\n            onChange={(e) => handleCheckChange(e)}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}